name: LLM Conversation Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/utils/**'
      - 'tests/**'
      - '.github/workflows/tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/utils/**'
      - 'tests/**'
      - '.github/workflows/tests.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage pytest pytest-cov
    
    - name: Run unit tests
      run: |
        python -m pytest tests/llm_client_tests.py tests/gen_conversations_helpers_tests.py tests/gen_conversations_tests.py -v
    
    - name: Run integration tests
      run: |
        python -m pytest tests/integration_tests.py -v
    
    - name: Generate coverage report
      run: |
        python -m pytest --cov=src.utils tests/ --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Check code style with black
      run: |
        black --check src/utils/
    
    - name: Check imports with isort
      run: |
        isort --check-only --profile black src/utils/
    
    - name: Lint with flake8
      run: |
        flake8 src/utils/ --max-line-length=100 --extend-ignore=E203